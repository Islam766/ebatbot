from misc import bot, dp, cursor, button_remove
from aiogram.types import Message
from aiogram.utils.markdown import quote_html
from aiogram import types
import random, time
from .functions import *
from time import gmtime
from time import strftime
from aiogram.dispatcher.filters import Text

Admin = 1912408598
@dp.message_handler(content_types=["text"])
async def main(message: types.Message):
    flowers = ["üå∏", "üåº", "üçÅ", "üåø", "üåπ", "üå∑", "üå∫"]
    phrases = ["–ü—Ä–∏–≤–µ—Ç–∏–∫ —Å–æ–ª–Ω—Ü–µ‚ù§Ô∏è", "–ß–µ —Å –µ–±–∞–ª–æ–º?", "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å", "–ù—É –ø—Ä–∏–≤–µ—Ç üëâüëà", "–°–∞–ª–∞–º", "–ë—Ä–∞—Ç", "–ò–£–£–£–£–£–£–£–£–£–£–£", "–î–æ–ø—É—Å—Ç–∏–º"]
    user = message.from_user
    chat = message.chat
    if message.text.lower() == "—Å—ç–º":
        data = await get_rang(message)
        if data is None:
            return await message.reply(f"üö´ <b>–ù–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.</b>\n\n"
                                       f"/start –≤ –ª—Å —É –±–æ—Ç–∞!")
        else:
            await message.reply(f"{random.choice(phrases)}\n"
                                f"–¢—ã –≤ —á–∞—Ç–µ: <b>{message.chat.title}</b>")
    elif message.text.lower() in ["—Å—ç–º –∫—Ç–æ —è", "–ø—Ä–æ—Ñ–∏–ª—å", "—Å—ç–º –ø—Ä–æ—Ñ–∏–ª—å"]:
        data = await get_rang(message)
        if data is None:
            return await message.reply(f"üö´ <b>–ù–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.</b>\n\n"
                                       f"/start –≤ –ª—Å —É –±–æ—Ç–∞!")
        elif data[1] == 1:
            status = "\n¬´<b>–ê–¥–º–∏–Ω –±–æ—Ç–∞</b>¬ª  ï‚Ä¢·¥•‚Ä¢ î"
        elif data[1] == 0:
            status = "—é–∑–µ—Ä"
        if data[2] == 0:
            cvip = "–ò–≥—Ä–æ–∫"
        elif data[2] == 1:
            cvip = "VIP"
        if user.username is None:
            username = "–ù–µ—Ç"
        else:
            username = f"@{user.username}"
        return_get_balance = await get_balance(message)
        if data[6] == 0:
            brak = "–ë–µ–∑ –±—Ä–∞–∫–∞üíî"
        else:
            marry = cursor.execute("SELECT marry FROM users WHERE user_id=?", (user.id,)).fetchall()
            marred = await bot.get_chat(str(marry[0][0]))
            mname = quote_html(marred.full_name)
            get = cursor.execute("SELECT marry_time FROM users WHERE user_id=?", (user.id,)).fetchall()
            mtime = f"{int(get[0][0])}"
            marry_time = time.time() - float(mtime)
            vremya = strftime("%j –¥–Ω–µ–π %H —á–∞—Å–æ–≤ %M –º–∏–Ω—É—Ç", gmtime(marry_time))
            brak = f"–ë—Ä–∞–∫ —Å - {mname}\n   ‚ï∞–í –±—Ä–∞–∫–µ —É–∂–µ - {vremya}"
        await bot.send_message(message.chat.id, f"{random.choice(flowers)} –ò–º—è - {quote_html(user.full_name)}\n"
                                                f"‚ï∞–Æ–∑–µ—Ä - {username}\n"
                                                f"‚ï∞–ê–π–¥–∏ - <code>{user.id}</code>\n"
                                                f"‚ï∞–ú–æ–Ω–µ—Ç–æ–∫ - <code>{return_get_balance}</code>\n"
                                                f"‚ï∞–°—Ç–∞—Ç—É—Å - {cvip}\n"
                                                f"‚ï∞{brak}\n"
                                                f"{status}", reply_markup=button_remove)

    elif message.text.lower() in [" —Å—ç–º –∫—Ç–æ —ç—Ç–æ", "–∫—Ç–æ —ç—Ç–æ", "–∫—Ç–æ —Ç—ã", "—Ç—ã –∫—Ç–æ"]:
        reply = message.reply_to_message
        if reply:
            replyuser = reply.from_user
            replydata = await reply_get_rang(message)
            if replyuser.id == (await bot.get_me()).id:
                return await message.reply("–Ø –±–æ—Ç, –∏–¥–∏–æ—Ç.")
            if replydata is None:
                return await message.reply(f"üö´ <b>–ù–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.</b>\n\n"
                                           f"/start –≤ –ª—Å —É –±–æ—Ç–∞!")
            elif replydata[1] == 1:
                status = "\n¬´<b>–ê–¥–º–∏–Ω –±–æ—Ç–∞</b>¬ª  ï‚Ä¢·¥•‚Ä¢ î"
            elif replydata[1] == 0:
                status = "—é–∑–µ—Ä"
            if replydata[2] == 0:
                cvip = "–ò–≥—Ä–æ–∫"
            elif replydata[2] == 1:
                cvip = "VIP"
            if replyuser.username is None:
                username = "–ù–µ—Ç"
            else:
                username = f"@{replyuser.username}"
            return_get_balance = await reply_get_balance(message)
            if replydata[6] == 0:
                brak = "–ë–µ–∑ –±—Ä–∞–∫–∞üíî"
            else:
                marry = cursor.execute("SELECT marry FROM users WHERE user_id=?", (replyuser.id,)).fetchall()
                marred = await bot.get_chat(str(marry[0][0]))
                mname = quote_html(marred.full_name)
                get = cursor.execute("SELECT marry_time FROM users WHERE user_id=?", (replyuser.id,)).fetchall()
                mtime = f"{int(get[0][0])}"
                marry_time = time.time() - float(mtime)
                vremya = strftime("%j –¥–Ω–µ–π %H —á–∞—Å–æ–≤ %M –º–∏–Ω—É—Ç", gmtime(marry_time))
                brak = f"–ë—Ä–∞–∫ —Å - {mname}\n   ‚ï∞–í –±—Ä–∞–∫–µ —É–∂–µ - {vremya}"
            await bot.send_message(message.chat.id, f"{random.choice(flowers)} –ò–º—è - {quote_html(replyuser.full_name)}\n"
                                                    f"‚ï∞–Æ–∑–µ—Ä - {username}\n"
                                                    f"‚ï∞–ê–π–¥–∏ - <code>{replyuser.id}</code>\n"
                                                    f"‚ï∞–ú–æ–Ω–µ—Ç–æ–∫ - <code>{return_get_balance}</code>\n"
                                                    f"‚ï∞–°—Ç–∞—Ç—É—Å - {cvip}\n"
                                                    f"‚ï∞{brak}\n"
                                                    f"{status}", reply_markup=button_remove)
    elif message.text.lower() in ["—Å—ç–º –≥–¥–µ —è", "–≥–¥–µ —è"]:
        getwelcome = cursor.execute("SELECT welcome FROM chats WHERE chat_id=?", (chat.id,)).fetchall()
        if getwelcome is None:
            return await message.reply(f"üö´ <b>–ß–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.</b>")
        else:
            get = f"{str(getwelcome[0][0])}"
            if get == "0":
                welcome = "–ù–µ—Ç"
            else:
                welcome = quote_html(str(get))
            await message.reply(f"{quote_html(message.from_user.full_name)} —Ç—ã –≤ —á–∞—Ç–µ <b>{message.chat.title}</b>\nID: <code>{message.chat.id}</code>\n"
                                f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –≤ —á–∞—Ç–µ: <b>{welcome}</b>", reply_markup=button_remove)
    elif message.text.lower() in ["–±", "–±–∞–ª–∞–Ω—Å"]:
        data = await get_rang(message)
        if data is None:
            return await message.reply(f"üö´ <b>–ù–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.</b>\n\n"
                                       f"/start –≤ –ª—Å —É –±–æ—Ç–∞!")
        else:
            return_get_balance = await get_balance(message)
            return_get_limit = await get_limit(message)
            if return_get_balance == "0":
                await message.reply(f"{user.first_name}, –≤–∞—à –±–∞–ª–∞–Ω—Å: <code>{return_get_balance}</code> –º–æ–Ω–µ—Ç.\n"
                                    f"–¢—ã –º–æ–∂–µ—à—å –≤–∑—è—Ç—å –±–æ–Ω—É—Å, –Ω–∞–ø–∏—Å–∞–≤ ¬´–±–æ–Ω—É—Å¬ª!\n\n"
                                    f"–õ–∏–º–∏—Ç: <code>{return_get_limit}</code> –º–æ–Ω–µ—Ç.")
            else:
                await message.reply(f"{user.first_name}, –≤–∞—à –±–∞–ª–∞–Ω—Å: <code>{return_get_balance}</code> –º–æ–Ω–µ—Ç.\n\n")

    elif message.text.lower() == "–±–æ–Ω—É—Å":
        data = await get_rang(message)
        if data is None:
            return await message.reply(f"üö´ <b>–ù–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.</b>\n\n"
                                       f"/start –≤ –ª—Å —É –±–æ—Ç–∞!")
        return_get_balance = await get_balance(message)
        period = 1 * 1
        get = cursor.execute("SELECT last_bonus FROM users WHERE user_id=?", (user.id,)).fetchall()
        last_bonus = f"{int(get[0][0])}"
        bonustime = time.time() - float(last_bonus)
        if int(return_get_balance) < 5000:
            if bonustime > period:
                if data[2] == 1:
                    bonus = random.randint(9000, 3000)
                elif data[2] == 0:
                    bonus = random.randint(3000, 9000)
                cursor.execute(f'UPDATE users SET balance=? WHERE user_id=?', (bonus, user.id,))
                cursor.execute(f'UPDATE users SET last_bonus=? WHERE user_id=?', (time.time(), user.id,))
                await message.reply(f"<a href='tg://user?id={user.id}'>{user.first_name}</a>, —Ç—ã –ø–æ–ª—É—á–∏–ª —Å–≤–æ–π –±–æ–Ω—É—Å –≤ —Ä–∞–∑–º–µ—Ä–µ <code>{str(bonus)}</code> –º–æ–Ω–µ—Ç!")
            else:
                return await message.reply(f"<a href='tg://user?id={user.id}'>{user.first_name}</a>, 3 —á–∞—Å–∞ —Å –Ω–∞—á–∞–ª–∞ –≤–∑—è—Ç–∏—è –±–æ–Ω—É—Å–∞ –µ—â—ë –Ω–µ –ø—Ä–æ—à–ª–∏!\n")
        else:
            return await message.reply(f"<a href='tg://user?id={user.id}'>{user.first_name}</a>, —Ç–≤–æ–π –±–∞–ª–∞–Ω—Å –Ω–µ –Ω–∏–∂–µ 50 –º–æ–Ω–µ—Ç!")
    elif message.text.lower() == "—Å—ç–º –∞–¥–º–∏–Ω—ã":
        data = await get_rang(message)
        if data[1] == 1 or data[1] == 2:
            creator = await bot.get_chat(1912408598)
            return_get_admins = await get_admins(message)
            await message.reply(f"<b>–ê–¥–º–∏–Ω—ã –±–æ—Ç–∞:</b>\n\n{return_get_admins}\n<b>–°–æ–∑–¥–∞—Ç–µ–ª—å:</b>\n"
                                f"‚Ä¢ {creator.first_name} | ID: <code>{creator.id}</code>", reply_markup=button_remove)
    elif message.text.lower() == "—Å—ç–º –≤–∏–ø—ã":
        data = await get_rang(message)
        if data[1] == 1 or data[1] == 2 or data[2] == 1:
            return_get_vips = await get_vips(message)
            await message.reply(f"<b>–í—Å–µ –≤–∏–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:</b>\n\n{return_get_vips}", reply_markup=button_remove)
    elif message.text.lower() == "—Å—ç–º —á–∞—Ç—ã":
        data = await get_rang(message)
        if data[1] == 1 or data[1] == 2:
            return_get_chats = await get_chats(message)
            await message.reply(f"<b>–ß–∞—Ç—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:</b>\n\n{return_get_chats}", reply_markup=button_remove)
    ######################################–†–ü –ö–û–ú–ê–ù–î–´#################################################
    cursor.execute("SELECT * FROM chats WHERE chat_id=?", (chat.id,))
    chat_data = cursor.fetchone()
    if chat_data[2] == 1:
        if message.text.lower() == "—á–º–æ–∫":
            reply = message.reply_to_message
            if reply:
                replyuser = reply.from_user
                await bot.send_message(message.chat.id, f"<a href='tg://user?id={user.id}'>{user.first_name}</a> —á–º–æ–∫–Ω—É–ª(-–∞) <a href='tg://user?id={replyuser.id}'>{replyuser.first_name}</a>")
        if message.text.lower() == "—á–ø–æ–∫":
            reply = message.reply_to_message
            if reply:
                replyuser = reply.from_user
                await bot.send_message(message.chat.id, f"<a href='tg://user?id={user.id}'>{user.first_name}</a> —á–ø–æ–∫–Ω—É–ª(-–∞) <a href='tg://user?id={replyuser.id}'>{replyuser.first_name}</a>")
        if message.text.lower() == "–∫—É—Å—å":
            reply = message.reply_to_message
            if reply:
                replyuser = reply.from_user
                await bot.send_message(message.chat.id, f"<a href='tg://user?id={user.id}'>{user.first_name}</a> –∫—É—Å—å–Ω—É–ª(-–∞) <a href='tg://user?id={replyuser.id}'>{replyuser.first_name}</a>")
        if message.text.lower() == "–æ–±–Ω—è—Ç—å":
            reply = message.reply_to_message
            if reply:
                replyuser = reply.from_user
                await bot.send_message(message.chat.id, f"<a href='tg://user?id={user.id}'>{user.first_name}</a> –æ–±–Ω—è–ª(-–∞) <a href='tg://user?id={replyuser.id}'>{replyuser.first_name}</a>")
        if message.text.lower() == "—à–ª–µ–ø":
            reply = message.reply_to_message
            if reply:
                replyuser = reply.from_user
                await bot.send_message(message.chat.id, f"<a href='tg://user?id={user.id}'>{user.first_name}</a> —à–ª–µ–ø–Ω—É–ª(-–∞) <a href='tg://user?id={replyuser.id}'>{replyuser.first_name}</a>")
        if message.text.lower() == "—É–±–∏—Ç—å":
            reply = message.reply_to_message
            if reply:
                replyuser = reply.from_user
                await bot.send_message(message.chat.id, f"<a href='tg://user?id={user.id}'>{user.first_name}</a> —É–±–∏–ª(-–∞) <a href='tg://user?id={replyuser.id}'>{replyuser.first_name}</a>")
        if message.text.lower() == "–≤—ã–µ–±–∞—Ç—å":
            reply = message.reply_to_message
            if reply:
                replyuser = reply.from_user
                await bot.send_message(message.chat.id, f"<a href='tg://user?id={user.id}'>{user.first_name}</a> –≤—ã–µ–±–∞–ª(-–∞) <a href='tg://user?id={replyuser.id}'>{replyuser.first_name}</a>")
        if message.text.lower() == "—Å–≤—è–∑–∞—Ç—å":
            reply = message.reply_to_message
            if reply:
                replyuser = reply.from_user
                await bot.send_message(message.chat.id, f"<a href='tg://user?id={user.id}'>{user.first_name}</a> —Å–≤—è–∑–∞–ª(-–∞) <a href='tg://user?id={replyuser.id}'>{replyuser.first_name}</a>")
        if message.text.lower() == "—É–¥–∞—Ä–∏—Ç—å":
            reply = message.reply_to_message
            if reply:
                replyuser = reply.from_user
                await bot.send_message(message.chat.id, f"<a href='tg://user?id={user.id}'>{user.first_name}</a> —É–¥–∞—Ä–∏–ª(-–∞) <a href='tg://user?id={replyuser.id}'>{replyuser.first_name}</a>")
        if message.text.lower() == "—É–µ–±–∞—Ç—å":
            reply = message.reply_to_message
            if reply:
                replyuser = reply.from_user
                await bot.send_message(message.chat.id, f"<a href='tg://user?id={user.id}'>{user.first_name}</a> —É–µ–±–∞–ª(-–∞) <a href='tg://user?id={replyuser.id}'>{replyuser.first_name}</a>")
        if message.text.lower() == "–æ—Ç—Å–æ—Å–∞—Ç—å":
            reply = message.reply_to_message
            if reply:
                replyuser = reply.from_user
                await bot.send_message(message.chat.id, f"<a href='tg://user?id={user.id}'>{user.first_name}</a> –æ—Ç—Å–æ—Å–∞–ª(-–∞) —É <a href='tg://user?id={replyuser.id}'>{replyuser.first_name}</a>")
        if message.text.lower() == "–æ—Ç–ª–∏–∑–∞—Ç—å":
            reply = message.reply_to_message
            if reply:
                replyuser = reply.from_user
                await bot.send_message(message.chat.id, f"<a href='tg://user?id={user.id}'>{user.first_name}</a> –æ—Ç–ª–∏–∑–∞–ª(-–∞) —É <a href='tg://user?id={replyuser.id}'>{replyuser.first_name}</a>")
        if message.text.lower() == "–∑–∞–¥—É—à–∏—Ç—å":
            reply = message.reply_to_message
            if reply:
                replyuser = reply.from_user
                await bot.send_message(message.chat.id, f"<a href='tg://user?id={user.id}'>{user.first_name}</a> –∑–∞–¥—É—à–∏–ª(-–∞) <a href='tg://user?id={replyuser.id}'>{replyuser.first_name}</a>")
        if message.text.lower() == "—É–∫—Ä–∞—Å—Ç—å":
            reply = message.reply_to_message
            if reply:
                replyuser = reply.from_user
                await bot.send_message(message.chat.id, f"<a href='tg://user?id={user.id}'>{user.first_name}</a> —É–∫—Ä–∞–ª(-–∞) <a href='tg://user?id={replyuser.id}'>{replyuser.first_name}</a>")
        if message.text.lower() == "–ø–æ–≥–ª–∞–¥–∏—Ç—å":
            reply = message.reply_to_message
            if reply:
                replyuser = reply.from_user
                await bot.send_message(message.chat.id, f"<a href='tg://user?id={user.id}'>{user.first_name}</a> –ø–æ–≥–ª–∞–¥–∏–ª(-–∞) <a href='tg://user?id={replyuser.id}'>{replyuser.first_name}</a>")
        if message.text.lower() == "–ø—Ä–∏—Ç—è–Ω—É—Ç—å":
            reply = message.reply_to_message
            if reply:
                replyuser = reply.from_user
                await bot.send_message(message.chat.id, f"<a href='tg://user?id={user.id}'>{user.first_name}</a> –ø—Ä–∏—Ç—è–Ω—É–ª(-–∞) <a href='tg://user?id={replyuser.id}'>{replyuser.first_name}</a>")
        if message.text.lower() == "–∏–∑–Ω–∞—Å–∏–ª–æ–≤–∞—Ç—å":
            reply = message.reply_to_message
            if reply:
                replyuser = reply.from_user
                await bot.send_message(message.chat.id, f"<a href='tg://user?id={user.id}'>{user.first_name}</a> –∏–∑–Ω–∞—Å–∏–ª–æ–≤–∞–ª(-–∞) <a href='tg://user?id={replyuser.id}'>{replyuser.first_name}</a>")
        if message.text.lower() == "–æ—Ç–ø–æ—Ä–æ—Ç—å":
            reply = message.reply_to_message
            if reply:
                replyuser = reply.from_user
                await bot.send_message(message.chat.id, f"<a href='tg://user?id={user.id}'>{user.first_name}</a> –æ—Ç–ø–æ—Ä–æ–ª(-–∞) <a href='tg://user?id={replyuser.id}'>{replyuser.first_name}</a>")
    elif chat_data[2] == 0:
        return

@dp.message_handler(content_types=["pinned_message"])
async def pinned(message: types.Message):
    pinned = random.choice(["–î–µ—Ä—å–º–æ!", "–∞—Ö–∞—Ö–∞—Ö–∞—Ö", "—Ö—É–π–Ω—è –ø–æ–ª–Ω–∞—è!", "–∞—Ö—É–µ—Ç—å –∫—Ä—É—Ç–æ!", "—Å—É–∫–∞ –Ω–∞—Ö—É—è —è —ç—Ç–æ –ø—Ä–æ—á–∏—Ç–∞–ª?", "—Ç—ã –∏–¥–∏–æ—Ç?"])
    await message.reply(f"{pinned}")

@dp.message_handler(Text("—Å–Ω—è—Ç—å —à—Ç–∞–Ω—ã", ignore_case=True))
async def take_off_pants_message(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    await message.answer(
        f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> —Å–Ω—è–ª —à—Ç–∞–Ω—ã ü©≥üîû  —É <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>""")

@dp.message_handler(Text("gay", ignore_case=True))
async def gay_message(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    await message.answer(
        f"""<a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a> –≥–µ–π üè≥Ô∏è‚Äçüåà üë¨  –Ω–∞ {random.randint(0, 100)}%""")

@dp.message_handler(Text("–ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å", ignore_case=True))
async def kiss_message(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    y = ["üòö", "üòô", "üòó", "üòò"]
    o = random.choice(y)
    await message.answer(
        f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> –ø–æ—Ü–µ–ª–æ–≤–∞–ª {o}  <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>""")


@dp.message_handler(Text("–≤—ã–µ–±–∞—Ç—å", ignore_case=True))
async def fuck_message(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    await message.answer(
        f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> –≤—ã–µ–±–∞–ª(–∞) üí™üëâüëå  <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>""")


@dp.message_handler(Text("–æ–±–Ω—è—Ç—å", ignore_case=True))
async def hug_message(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    await message.answer(
        f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> –æ–±–Ω—è–ª(–∞) ü§ó  <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>""")


@dp.message_handler(Text("–ø–æ—Å–ª–∞—Ç—å –Ω–∞—Ö—É–π", ignore_case=True))
async def hug_message(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    await message.answer(
        f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> –ø–æ—Å–ª–∞–ª(–∞) ü§ó  <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a> –Ω–∞—Ö—É–π üñïüò¨""")


@dp.message_handler(Text("–ø–Ω—É—Ç—å", ignore_case=True))
async def kick_message(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    await message.answer(
        f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> –ø–Ω—É–ª(–∞) üëû <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>""")


@dp.message_handler(Text("–ø–æ–∂–∞—Ç—å —Ä—É–∫—É", ignore_case=True))
async def shake_hands_message(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    await message.answer(
        f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> –ø–æ–∂–∞–ª(–∞) —Ä—É–∫—É ü§ù <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>""")


@dp.message_handler(Text("—É—â–∏–ø–Ω—É—Ç—å –ø–æ–ø–∫—É", ignore_case=True))
async def pinch_ass_message(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    await message.answer(
        f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> —É—â–∏–ø–Ω—É–ª(–∞) –ø–æ–ø–∫—É üçëü§è <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>""")


@dp.message_handler(Text("–ø–æ—Ç—Ä–æ–≥–∞—Ç—å —á–ª–µ–Ω", ignore_case=True))
async def touch_penis(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    await message.answer(
        f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> –ø–æ—Ç—Ä–æ–≥–∞–ª(–∞) —á–ª–µ–Ω üçåü§è <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>""")


@dp.message_handler(Text("—Ç—Ä–∞—Ö–Ω—É—Ç—å", ignore_case=True))
async def fuck2_message(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    await message.answer(
        f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> —Ç—Ä–∞—Ö–Ω—É–ª(–∞) üëâüëå  <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>""")


@dp.message_handler(Text("–æ—Ç—Å–æ—Å–∞—Ç—å", ignore_case=True))
async def suck_off_message(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    await message.answer(
        f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> –æ—Ç—Å–æ—Å–∞–ª(–∞) üëÑüçå —É <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>""")


@dp.message_handler(Text("–ø–æ–¥—Ä–æ—á–∏—Ç—å", ignore_case=True))
async def jerk_off_message(message: types.Message):
    await message.answer(
        f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ä–æ—á–∏–ª üçÜ –∏ –ø–æ–ª—É—á–∏–ª —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ üí¶.""")


@dp.message_handler(Text("–ø–æ–¥—Ä–æ—á–∏—Ç—å –Ω–∞", ignore_case=True))
async def jerk2_off_message(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    await message.answer(
        f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> –ø–æ–¥—Ä–æ—á–∏–ª(–∞) üçÜ  –Ω–∞ <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>""")

@dp.message_handler(Text("—É–¥–∞—Ä–∏—Ç—å", ignore_case=True))
async def hit_message(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    await message.answer(
        f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> —É–¥–∞—Ä–∏–ª(–∞) üëä <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>""")

@dp.message_handler(Text("—É–¥–∞—Ä–∏—Ç—å —Å–∫–æ–≤–æ—Ä–æ–¥–∫–æ–π", ignore_case=True))
async def hit2_message(message: types.Message):
    if not message.reply_to_message:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ !")
        return

    await message.answer(
        f"""<a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a> —É–¥–∞—Ä–∏–ª(–∞) —Å–∫–æ–≤–æ—Ä–æ–¥–∫–æ–π üí•üëä <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>""")

